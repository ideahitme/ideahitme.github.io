<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Yerken&#39;s blog</title>
    <link>https://ideahitme.github.io/</link>
    <description>Recent content on Yerken&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 17 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ideahitme.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sparse set in Go</title>
      <link>https://ideahitme.github.io/posts/sparse-set-in-go/</link>
      <pubDate>Sat, 17 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ideahitme.github.io/posts/sparse-set-in-go/</guid>
      <description>This post is inspired by https://research.swtch.com/sparse
Complete code: https://github.com/ideahitme/go-and-learn/blob/master/golang/cgo/sparse.go
Implementing data structures in Go is easy due to the presence of slices and maps which allows data structures like queue, stack programmed in just few lines of code. Implementing sets should not be too difficult either, but let&amp;rsquo;s take a closer look at two different ways of doing it. First is the most commonly seen implementation via map and the other will utilize an interesting data structure called sparse set.</description>
    </item>
    
    <item>
      <title>Is this thing on?</title>
      <link>https://ideahitme.github.io/posts/intro/</link>
      <pubDate>Thu, 15 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://ideahitme.github.io/posts/intro/</guid>
      <description>Some mathematician, I believe, has said that true pleasure lies not in the discovery of truth, but in the search for it.
 Tolstoy</description>
    </item>
    
  </channel>
</rss>